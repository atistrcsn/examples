class Foo(bar : Bar) {

} static {
  private val cache = HashMap<Bar, Foo>()

  Foo() {
    return Foo(null);
  }

  Foo(bar : Bar) {
    if (bar in cache.keys) return cache[bar]
    val newFoo = this(bar) // calls the primary constructor
    cahce[bar] = newFoo
    return newFoo
  }
}

// To create an object of Foo
val foo = Foo()
or
val foo = Foo(Bar())

// Subclass (Foo must be marked as extendable/open, i.e. ont sealed)
class FooSub(S : String) : Foo() { // Delegates to Foo created as a result of the factory method Foo()

}